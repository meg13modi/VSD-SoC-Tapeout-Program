*Getting started with Digital VLSI SOC Design and Planning*
O0 == O1 == O2 == O3 == O4 



This repository provides a step-by-step installation guide for setting up essential open-source VLSI tools on an Ubuntu system. These tools cover different stages of the digital design flow: synthesis, simulation, verification, circuit analysis, layout design, and physical design.

ðŸ“Œ System Requirements

Operating System: Ubuntu 20.04+ (recommended inside VirtualBox)

RAM: Minimum 6 GB

Storage: Minimum 50 GB

CPU: 4 vCPUs

ðŸ›  Tools Covered
1. Yosys â€“ Logic Synthesis

Purpose: Converts RTL (Verilog) into gate-level netlists.

Installation Steps (summary):

sudo apt-get update
git clone https://github.com/YosysHQ/yosys.git
cd yosys
sudo apt-get install build-essential clang bison flex libreadline-dev gawk tcl-dev libffi-dev \
    git graphviz xdot pkg-config python3 libboost-system-dev libboost-python-dev \
    libboost-filesystem-dev zlib1g-dev
make config-gcc
make
sudo make install

2. Icarus Verilog (iverilog) â€“ HDL Simulation

Purpose: Compiles and simulates Verilog code.

Installation:

sudo apt-get update
sudo apt-get install iverilog

3. GTKWave â€“ Waveform Viewer

Purpose: View VCD/FSDB waveforms generated by simulators like Icarus Verilog.

Installation:

sudo apt-get update
sudo apt-get install gtkwave

4. ngspice â€“ Circuit Simulation

Purpose: SPICE-based analog and mixed-signal circuit simulator.

Installation:

tar -zxvf ngspice-37.tar.gz
cd ngspice-37
mkdir release && cd release
../configure --with-x --with-readline=yes --disable-debug
make
sudo make install

5. Magic â€“ Layout Tool

Purpose: VLSI layout editor for chip design.

Installation:

sudo apt-get install m4 tcsh csh libx11-dev tcl-dev tk-dev libcairo2-dev \
    mesa-common-dev libglu1-mesa-dev libncurses-dev
git clone https://github.com/RTimothyEdwards/magic
cd magic
./configure
make
sudo make install

6. OpenLANE â€“ RTL to GDSII Flow

Purpose: End-to-end open-source ASIC physical design flow.

Dependencies: Requires Docker and Python3.

Setup:

sudo apt-get update && sudo apt-get upgrade
sudo apt install -y build-essential python3 python3-venv python3-pip make git \
    apt-transport-https ca-certificates curl software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io
sudo usermod -aG docker $USER
sudo reboot


Verify Docker:

docker run hello-world


Install OpenLANE:

cd $HOME
git clone https://github.com/The-OpenROAD-Project/OpenLane
cd OpenLane
make
make test

7. (Optional) OpenSTA â€“ Static Timing Analysis

Purpose: Timing verification of synthesized netlists.

Source: OpenSTA GitHub

âœ… Post-Installation Checks

Run these commands to confirm successful setup:

yosys --version
iverilog -V
gtkwave --version
ngspice -v
magic -v
docker --version
python3 --version
